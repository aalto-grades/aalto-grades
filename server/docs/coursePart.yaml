# SPDX-FileCopyrightText: 2023 The Aalto Grades Developers
#
# SPDX-License-Identifier: MIT
---
definitions:
  CoursePartId:
    type: integer
    description: Internal course part database ID.
    format: int32
    minimum: 1
    example: 1

  CoursePartName:
    type: string
    decription: Name of the course part.
    example: Exam

  CoursePart:
    description: Course part information.
    type: object
    properties:
      id:
        $ref: '#/definitions/CoursePartId'
      courseId:
        $ref: '#/definitions/CourseId'
      name:
        $ref: '#/definitions/CoursePartName'
      daysValid:
        type: number
        decription: Number of days valid.
        minimum: 1
        example: 365
      archived:
        type: boolean
        description: If course part has been archived
        example: false
      aplusGradeSources:
        type: array
        description: A+ grade sources connected to the course part.
        items:
          type: object
          properties:
            coursePartId:
              $ref: '#/definitions/CoursePartId'
            aplusCourse:
              $ref: '#/definitions/AplusCourseData'
            sourceType:
              $ref: '#/definitions/AplusGradeSourceType'
            moduleId:
              $ref: '#/definitions/AplusModuleId'
            moduleName:
              $ref: '#/definitions/AplusModuleName'
            difficulty:
              $ref: '#/definitions/AplusDifficulty'
    required:
      - id
      - courseId
      - name
      - daysValid
      - archived

  NewCoursePart:
    description: Course part information.
    type: object
    properties:
      name:
        $ref: '#/definitions/CoursePartName'
      daysValid:
        type: number
        decription: Number of days valid.
        minimum: 1
        example: 365
    required:
      - name
      - daysValid

  EditCoursePart:
    description: Course part information.
    type: object
    properties:
      name:
        $ref: '#/definitions/CoursePartName'
      daysValid:
        type: number
        decription: Number of days valid.
        minimum: 1
        example: 365
      archived:
        type: boolean
        description: If course part has been archived
        example: false

/v1/courses/{courseId}/parts:
  get:
    tags: [Course Part]
    description: Get all the course parts of a course.
    parameters:
      - $ref: '#/components/parameters/courseId'
    responses:
      200:
        description: Returns all course parts of the course.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/definitions/CoursePart'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
    security:
      - cookieAuth: []
  post:
    tags: [Course Part]
    description: >
      Add a course part to the course.
      Available only to admin users and teachers in charge of the course.
    parameters:
      - $ref: '#/components/parameters/courseId'
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NewCoursePart'
    responses:
      201:
        description: Course part created.
        content:
          application/json:
            schema:
              $ref: '#/definitions/CoursePartId'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/Conflict'
    security:
      - cookieAuth: []

/v1/courses/{courseId}/parts/{coursePartId}:
  put:
    tags: [Course Part]
    description: >
      Edit specified course part.
      Available only to admin users and teachers in charge of the course.
    parameters:
      - $ref: '#/components/parameters/courseId'
      - $ref: '#/components/parameters/coursePartId'
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EditCoursePart'
    responses:
      200:
        description: CoursePart updated.
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/Conflict'
    security:
      - cookieAuth: []
  delete:
    tags: [Course Part]
    description: >
      Delete specified course part.
      Available only to admin users and teachers in charge of the course.
    parameters:
      - $ref: '#/components/parameters/courseId'
      - $ref: '#/components/parameters/coursePartId'
    responses:
      200:
        description: CoursePart deleted.
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/Conflict'
    security:
      - cookieAuth: []
