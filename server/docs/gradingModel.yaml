# SPDX-FileCopyrightText: 2024 The Ossi Developers
#
# SPDX-License-Identifier: MIT
---
definitions:
  # Smaller units
  GradingModelId:
    type: integer
    format: int32
    description: Internal grading model database ID.
    minimum: 1
    example: 1
  NullableGradingModelId:
    type: integer
    format: int32
    nullable: true
    description: Internal grading model database ID.
    minimum: 1
    example: 1

  GradingModelName:
    type: string
    description: Name of the grading model.
    example: Final grade
  GraphStructure:
    type: object
    description: Graph structure.
    example: {nodes: [], edges: [], nodeData: {}}
  GradingModelArchived:
    type: boolean
    description: If grading model has been archived.
    example: false

  # Bigger schemas
  GradingModelData:
    type: object
    description: Grading model information.
    properties:
      id:
        $ref: "#/definitions/GradingModelId"
      courseId:
        $ref: "#/definitions/CourseId"
      name:
        $ref: "#/definitions/GradingModelName"
      graphStructure:
        $ref: "#/definitions/GraphStructure"
      archived:
        $ref: "#/definitions/GradingModelArchived"
      hasArchivedSources:
        type: boolean
        description: If grading model has archived course parts.
        example: false
      hasDeletedSources:
        type: boolean
        description: If grading model has deleted course parts.
        example: false
    required:
      - id
      - courseId
      - name
      - graphStructure
      - archived
      - hasArchivedSources
      - hasDeletedSources

  NewGradingModelData:
    type: object
    description: Grading model information.
    properties:
      name:
        $ref: "#/definitions/GradingModelName"
      graphStructure:
        $ref: "#/definitions/GraphStructure"
    required:
      - name
      - graphStructure

  EditGradingModelData:
    type: object
    description: Grading model information.
    properties:
      name:
        $ref: "#/definitions/GradingModelName"
      graphStructure:
        $ref: "#/definitions/GraphStructure"
      archived:
        $ref: "#/definitions/GradingModelArchived"

/v1/courses/{courseId}/grading-models/{gradingModelId}:
  get:
    tags: [Grading Model]
    description: Get information about a grading model.
    parameters:
      - $ref: "#/parameters/courseId"
      - $ref: "#/parameters/gradingModelId"
    responses:
      200:
        description: Returns grading model with given ID.
        content:
          application/json:
            schema:
              $ref: "#/definitions/GradingModelData"
      400:
        $ref: "#/responses/BadRequest"
      401:
        $ref: "#/responses/Unauthorized"
      403:
        $ref: "#/responses/Forbidden"
      404:
        $ref: "#/responses/NotFound"
      409:
        $ref: "#/responses/Conflict"
    security:
      - cookieAuth: []
  put:
    tags: [Grading Model]
    description: >
      Edit specified grading model.
      Available only to admin users and teachers of the course.
    parameters:
      - $ref: "#/parameters/courseId"
      - $ref: "#/parameters/gradingModelId"
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/definitions/EditGradingModelData"
    responses:
      200:
        description: Grading model updated.
      400:
        $ref: "#/responses/BadRequest"
      401:
        $ref: "#/responses/Unauthorized"
      403:
        $ref: "#/responses/Forbidden"
      404:
        $ref: "#/responses/NotFound"
      409:
        $ref: "#/responses/Conflict"
    security:
      - cookieAuth: []
  delete:
    tags: [Grading Model]
    description: >
      Deletes specified grading model.
      Available only to admin users and teachers of the course.
    parameters:
      - $ref: "#/parameters/courseId"
      - $ref: "#/parameters/gradingModelId"
    responses:
      200:
        description: Grading model deleted.
      400:
        $ref: "#/responses/BadRequest"
      401:
        $ref: "#/responses/Unauthorized"
      403:
        $ref: "#/responses/Forbidden"
      404:
        $ref: "#/responses/NotFound"
      409:
        $ref: "#/responses/Conflict"
    security:
      - cookieAuth: []

/v1/courses/{courseId}/grading-models:
  get:
    tags: [Grading Model]
    description: >
      Get all the grading models of a course.
      Available only to admin users and teachers and assistants of the course.
    parameters:
      - $ref: "#/parameters/courseId"
    responses:
      200:
        description: Returns all grading models of the course.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/definitions/GradingModelData"
      400:
        $ref: "#/responses/BadRequest"
      401:
        $ref: "#/responses/Unauthorized"
      403:
        $ref: "#/responses/Forbidden"
      404:
        $ref: "#/responses/NotFound"
    security:
      - cookieAuth: []
  post:
    tags: [Grading Model]
    description: >
      Add a grading model to a course.
      Available only to admin users and teachers of the course.
    parameters:
      - $ref: "#/parameters/courseId"
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/definitions/NewGradingModelData"
    responses:
      201:
        description: Grading model created.
        content:
          application/json:
            schema:
              $ref: "#/definitions/GradingModelId"
      400:
        $ref: "#/responses/BadRequest"
      401:
        $ref: "#/responses/Unauthorized"
      403:
        $ref: "#/responses/Forbidden"
      404:
        $ref: "#/responses/NotFound"
      409:
        $ref: "#/responses/Conflict"
    security:
      - cookieAuth: []
