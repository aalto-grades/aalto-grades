# SPDX-FileCopyrightText: 2023 The Aalto Grades Developers
#
# SPDX-License-Identifier: MIT
---
definitions:
  AssessmentModelId:
    type: integer
    description: Internal grading model database ID.
    format: int32
    minimum: 1
    example: 1

  AssessmentModelData:
    type: object
    description: Grading model information.
    properties:
      id:
        $ref: '#/definitions/AssessmentModelId'
      courseId:
        $ref: '#/definitions/CourseId'
      name:
        type: string
        decription: Name of the grading model.
        example: Main model
      graphStructure:
        type: object
        description: Graph structure
        example: {'nodes': [], 'edges': [], 'nodeData': {}}
      archived:
        type: boolean
        description: If grading model has been archived
        example: false
      hasArchivedAttainments:
        type: boolean
        description: If grading model has archived attainments
        example: false
      hasDeletedAttainments:
        type: boolean
        description: If grading model has deleted attainments
        example: false
    required:
      - id
      - courseId
      - name
      - graphStructure
      - archived
      - hasArchivedAttainments
      - hasDeletedAttainments

  NewAssessmentModelData:
    type: object
    description: Grading model information.
    properties:
      name:
        type: string
        decription: Name of the grading model.
        example: Main model
      graphStructure:
        type: object
        description: Graph structure
        example: {'nodes': [], 'edges': [], 'nodeData': {}}
    required:
      - name
      - graphStructure

  EditAssessmentModelData:
    type: object
    description: Grading model information.
    properties:
      name:
        type: string
        decription: Name of the grading model.
        example: Main model
      graphStructure:
        type: object
        description: Graph structure
        example: {'nodes': [], 'edges': [], 'nodeData': {}}
      archived:
        type: boolean
        description: If grading model has been archived
        example: false

/v1/courses/{courseId}/assessment-models/{assessmentModelId}:
  get:
    tags: [Grading Model]
    description: Get information about a grading model.
    parameters:
      - $ref: '#/components/parameters/courseId'
      - $ref: '#/components/parameters/assessmentModelId'
    responses:
      200:
        description: Returns grading model with given ID.
        content:
          application/json:
            schema:
              $ref: '#/definitions/AssessmentModelData'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/Conflict'
    security:
      - cookieAuth: []
  put:
    tags: [Grading Model]
    description: >
      Edit specified attainment model.
      Available only to admin users and teacers of the course.
    parameters:
      - $ref: '#/components/parameters/courseId'
      - $ref: '#/components/parameters/assessmentModelId'
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EditAssessmentModelData'
    responses:
      200:
        description: Grading model updated
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/Conflict'
    security:
      - cookieAuth: []
  delete:
    tags: [Grading Model]
    description: >
      Deletes specified attainment model.
      Available only to admin users and teacers of the course.
    parameters:
      - $ref: '#/components/parameters/courseId'
      - $ref: '#/components/parameters/assessmentModelId'
    responses:
      200:
        description: Grading model deleted
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/Conflict'
    security:
      - cookieAuth: []

/v1/courses/{courseId}/assessment-models:
  get:
    tags: [Grading Model]
    description: >
      Get all the grading models of a course.
      Available only to admin users and teacers and assistants of the course.
    parameters:
      - $ref: '#/components/parameters/courseId'
    responses:
      200:
        description: Returns all grading models of the course
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/definitions/AssessmentModelData'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
    security:
      - cookieAuth: []
  post:
    tags: [Grading Model]
    description: >
      Add an attainment model to a course.
      Available only to admin users and teacers of the course.
    parameters:
      - $ref: '#/components/parameters/courseId'
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NewAssessmentModelData'
    responses:
      201:
        description: Grading model created
        content:
          application/json:
            schema:
              $ref: '#/definitions/AssessmentModelId'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      409:
        $ref: '#/components/responses/Conflict'
    security:
      - cookieAuth: []
