# SPDX-FileCopyrightText: 2023 The Aalto Grades Developers
#
# SPDX-License-Identifier: MIT
---
definitions:
  UserId:
    type: integer
    description: Internal user database ID.
    format: int32
    minimum: 1
    example: 1

  UserEmail:
    type: string
    description: User's email address.
    example: john.doe@aalto.fi

  UserData:
    type: object
    description: User's personal information.
    properties:
      id:
        $ref: '#/definitions/UserId'
      studentNumber:
        $ref: '#/definitions/StudentNumber'
      name:
        type: string
        description: User's name.
        example: Eddy Engineer
      email:
        $ref: '#/definitions/UserEmail'
    required:
      - id

  UserWithEmail:
    type: object
    properties:
      id:
        $ref: '#/definitions/UserId'
      name:
        type: string
        description: User's name.
        example: John Doe
      email:
        $ref: '#/definitions/UserEmail'
      studentNumber:
        type: string
        description: User's student number
        example: 1234567
    required:
      - id
      - email

  IdpUser:
    type: object
    description: Minimal idp user information.
    properties:
      id:
        $ref: '#/definitions/UserId'
      email:
        $ref: '#/definitions/UserEmail'
        nullable: true
    required:
      - id
      - email

  NewIdpUser:
    type: object
    description: Minimal idp user information.
    properties:
      email:
        $ref: '#/definitions/UserEmail'
    required:
      - email

/v1/user/{userId}/courses:
  get:
    tags: [User]
    description: >
      Get all courses the given user has or is currently participating in.
      Regular users can only access their own course list. Admin users can
      access the courses of any user.
    parameters:
      - $ref: '#/components/parameters/userId'
    responses:
      200:
        description: Courses the user has participated in.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/definitions/CourseData'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
    security:
      - cookieAuth: []

/v1/idp-users:
  get:
    tags: [User]
    description: >
      Get all users that can login with aalto idp.
      Available only to admin users.
    responses:
      200:
        description: User information.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/definitions/IdpUser'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
    security:
      - cookieAuth: []
  post:
    tags: [User]
    description: >
      Add users that can login with aalto idp.
      Available only to admin users.
    requestBody:
    content:
      application/json:
        schema:
          $ref: '#/definitions/NewIdpUser'
    responses:
      201:
        description: User created.
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      409:
        $ref: '#/components/responses/Conflict'
    security:
      - cookieAuth: []

/v1/idp-users/{userId}:
  delete:
    tags: [User]
    description: >
      delete idp user.
      Available only to admin users.
    parameters:
      - $ref: '#/components/parameters/userId'
    responses:
      200:
        description: User deleted.
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
    security:
      - cookieAuth: []
