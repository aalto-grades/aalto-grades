# SPDX-FileCopyrightText: 2024 The Ossi Developers
#
# SPDX-License-Identifier: MIT
---
definitions:
  # Smaller units
  TaskGradeId:
    type: integer
    format: int32
    description: Internal grade database ID.
    minimum: 0
    example: 1
  TaskGradeLogId:
    type: integer
    format: int32
    description: Internal grade log database ID.
    minimum: 0
    example: 1
  TaskGradeGrade:
    type: number
    format: int32
    description: The numerical grade of a student for a course task.
    minimum: 0
    example: 5
  TaskGradeDate:
    type: string
    format: date
    description: Date when grade was graded (e.g., deadline or exam date).
    example: 2024-04-01T00:00:00.000Z
  NullableTaskGradeExpiryDate:
    type: string
    format: date
    description: Date when the grade expires.
    example: 2024-04-01T00:00:00.000Z
  NullableTaskGradeComment:
    type: string
    nullable: true
    description: Comment.
    example: Corrected.
  ActionType:
    type: string
    enum: [CREATE, UPDATE, DELETE]
    description: Action types for changes to task grade
    example: UPDATE

  # Bigger schemas
  GradeData:
    type: object
    description: Grade data.
    properties:
      gradeId:
        $ref: '#/definitions/TaskGradeId'
      grader:
        $ref: '#/definitions/TeacherData'
      aplusGradeSource:
        oneOf:
          - $ref: '#/definitions/AplusGradeSourceData'
          - type: 'null'
      grade:
        $ref: '#/definitions/TaskGradeGrade'
      date:
        $ref: '#/definitions/TaskGradeDate'
      expiryDate:
        $ref: '#/definitions/NullableTaskGradeExpiryDate'
      comment:
        $ref: '#/definitions/NullableTaskGradeComment'
    required:
      - gradeId
      - grader
      - aplusGradeSource
      - grade
      - date
      - expiryDate
      - comment

  NewGrade:
    type: object
    description: Grade data.
    properties:
      studentNumber:
        $ref: '#/definitions/StudentNumber'
      courseTaskId:
        $ref: '#/definitions/CourseTaskId'
      aplusGradeSourceId:
        $ref: '#/definitions/NullableAplusGradeSourceId'
      grade:
        $ref: '#/definitions/TaskGradeGrade'
      date:
        $ref: '#/definitions/TaskGradeDate'
      expiryDate:
        $ref: '#/definitions/NullableTaskGradeExpiryDate'
      comment:
        $ref: '#/definitions/NullableTaskGradeComment'
    required:
      - studentNumber
      - courseTaskId
      - aplusGradeSourceId
      - grade
      - date
      - expiryDate
      - comment

  EditGrade:
    type: object
    description: Grade data.
    properties:
      grade:
        $ref: '#/definitions/TaskGradeGrade'
      date:
        $ref: '#/definitions/TaskGradeDate'
      expiryDate:
        $ref: '#/definitions/NullableTaskGradeExpiryDate'
      comment:
        $ref: '#/definitions/NullableTaskGradeComment'

  StudentRow:
    type: object
    description:
    properties:
      user:
        $ref: '#/definitions/StudentData'
      finalGrades:
        type: array
        items:
          $ref: '#/definitions/FinalGradeData'
      courseTasks:
        type: array
        items:
          type: object
          properties:
            courseTaskId:
              $ref: '#/definitions/CourseTaskId'
            courseTaskName:
              $ref: '#/definitions/CourseTaskName'
            grades:
              type: array
              items:
                $ref: '#/definitions/GradeData'

  LatestGrades:
    type: array
    description: Latest grades for each student.
    items:
      type: object
      properties:
        userId:
          $ref: '#/definitions/UserId'
        date:
          type: string
          format: date
          nullable: true
          description: Date of the latest grade.
          example: 2024-05-01T00:00:00.000Z
      required:
        - userId
        - date

  TaskGrade:
    type: object
    description: Task grade object in task grade database
    properties:
      id:
        $ref: '#/definitions/TaskGradeId'
      userId:
        $ref: '#/definitions/UserId'
      courseTaskId:
        $ref: '#/definitions/CourseTaskId'
      graderId:
        $ref: '#/definitions/UserId'
      aplusGradeSourceId:
        $ref: '#/definitions/NullableAplusGradeSourceId'
      grade:
        $ref: '#/definitions/TaskGradeGrade'
      date:
        $ref: '#/definitions/TaskGradeDate'
      expiryDate:
        $ref: '#/definitions/NullableTaskGradeExpiryDate'
      comment:
        $ref: '#/definitions/NullableTaskGradeComment'

  TaskGradeLog:
    type: object
    description: Log of changes to task grade
    properties:
      id:
        $ref: '#/definitions/TaskGradeLogId'
      courseTaskId:
        $ref: '#/definitions/CourseTaskId'
      actionType:
        $ref: '#/definitions/ActionType'
      previousState:
        $ref: '#/definitions/TaskGrade'
      user:
        $ref: '#/definitions/StudentData'
      taskGrade:
        $ref: '#/definitions/TaskGrade'
    required:
      - id
      - actionType
      - user

/v1/courses/{courseId}/grades:
  get:
    tags: [Task Grade]
    description: >
      Get the grades of all students.
      Available only to admin users and teachers & assistants of the course.
    parameters:
      - $ref: '#/parameters/courseId'
    responses:
      200:
        description: Returns all grades of the course.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/definitions/StudentRow'
      400:
        $ref: '#/responses/BadRequest'
      401:
        $ref: '#/responses/Unauthorized'
      403:
        $ref: '#/responses/Forbidden'
      404:
        $ref: '#/responses/NotFound'
    security:
      - cookieAuth: []
  post:
    tags: [Task Grade]
    description: >
      Add new grades to the course.
      Available only to admin users and teachers & assistants of the course.
    parameters:
      - $ref: '#/parameters/courseId'
    requestBody:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/definitions/NewGrade'
    responses:
      201:
        description: Grades added.
      400:
        $ref: '#/responses/BadRequest'
      401:
        $ref: '#/responses/Unauthorized'
      403:
        $ref: '#/responses/Forbidden'
      404:
        $ref: '#/responses/NotFound'
      409:
        $ref: '#/responses/Conflict'
    security:
      - cookieAuth: []

/v1/grade-logs:
  get:
    tags: [Task Grade]
    description: >
      Get the grade logs.
    parameters:
      - in: query
        name: userId
        schema:
          type: integer
        description: Internal user database ID
        example: 1
      - in: query
        name: taskGradeId
        schema:
          type: integer
        description: Internal task grade database ID
        example: 1
      - in: query
        name: courseTaskIds
        schema:
          type: string
        description: List of internal course task database IDs separated by commna
        example: 1,2,3
    responses:
      200:
        description: Returns logs of the task grade.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/definitions/TaskGradeLog'
      400:
        description: Invalid user id or task grade id.
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
                  description: Error message(s) explaining the error(s).
                  example:
                    [
                      "Invalid user id abc"
                    ]
      401:
        $ref: '#/responses/Unauthorized'
      403:
        $ref: '#/responses/Forbidden'
    security:
      - cookieAuth: []

/v1/courses/{courseId}/grades/{gradeId}:
  put:
    tags: [Task Grade]
    description: >
      Edit grade.
      Available only to admin users and teachers & assistants of the course.
    parameters:
      - $ref: '#/parameters/courseId'
      - $ref: '#/parameters/gradeId'
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EditGrade'
    responses:
      200:
        description: Grade edited.
      400:
        $ref: '#/responses/BadRequest'
      401:
        $ref: '#/responses/Unauthorized'
      403:
        $ref: '#/responses/Forbidden'
      404:
        $ref: '#/responses/NotFound'
      409:
        $ref: '#/responses/Conflict'
    security:
      - cookieAuth: []
  delete:
    tags: [Task Grade]
    description: >
      Delete grade.
      Available only to admin users and teachers & assistants of the course.
    parameters:
      - $ref: '#/parameters/courseId'
      - $ref: '#/parameters/gradeId'
    responses:
      200:
        description: Grade deleted.
      400:
        $ref: '#/responses/BadRequest'
      401:
        $ref: '#/responses/Unauthorized'
      403:
        $ref: '#/responses/Forbidden'
      404:
        $ref: '#/responses/NotFound'
      409:
        $ref: '#/responses/Conflict'
    security:
      - cookieAuth: []

/v1/latest-grades:
  get:
    tags: [Task Grade]
    description: Get latest grade date for each student.
    requestBody:
      content:
        application/json:
          schema:
            type: array
            description: User IDs to query.
            items:
              $ref: '#/definitions/UserId'
    responses:
      200:
        description: The dates of the latest grades for each student.
        content:
          application/json:
            schema:
              $ref: '#/definitions/LatestGrades'
      400:
        $ref: '#/responses/BadRequest'
      401:
        $ref: '#/responses/Unauthorized'
      403:
        $ref: '#/responses/Forbidden'
      404:
        $ref: '#/responses/NotFound'
    security:
      - cookieAuth: []
