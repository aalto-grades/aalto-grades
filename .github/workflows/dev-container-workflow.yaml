# SPDX-FileCopyrightText: 2023 The Aalto Grades Developers
#
# SPDX-License-Identifier: MIT
---
name: Dev Image Creation Workflow
run-name: ${{ github.actor }} dev container creation

# Run on every push
on:
  push:
    branches:
      - dev

# Run on dev push workflow success
# on:
#   workflow_run:
#     workflows: ['Dev Push Workflow']
#     branches: [dev]
#     types:
#       - completed

env:
  REGISTRY: ghcr.io
  FRONTEND_IMAGE_NAME: aalto-grades/aalto-grades-frontend-dev
  BACKEND_IMAGE_NAME: aalto-grades/aalto-grades-backend-dev

jobs:
  build_and_push_frontend_and_backend:
    # Run on dev push workflow success
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Frontend
        id: meta_front
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}

      - name: Extract metadata for Backend
        id: meta_back
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: client/Dockerfile.prod
          push: true
          tags: ${{ steps.meta_front.outputs.tags }}
          labels: ${{ steps.meta_front.outputs.labels }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: server/dockerfiles/Dockerfile.prod
          push: true
          tags: ${{ steps.meta_back.outputs.tags }}
          labels: ${{ steps.meta_back.outputs.labels }}
