# SPDX-FileCopyrightText: 2024 The Ossi Developers
#
# SPDX-License-Identifier: MIT
---
name: Build E2E Images
on:
  workflow_call:
    outputs:
      docker-images-cache-key:
        description: Cache key for built Docker images
        value: ${{ jobs.build-images.outputs.docker-images-cache-key }}

jobs:
  build-images:
    name: Build Docker images for E2E tests
    runs-on: ubuntu-latest
    outputs:
      docker-images-cache-key: ${{ steps.generate-cache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate Docker images cache key
        id: generate-cache-key
        run: |
          # Create a cache key based on relevant files
          echo "key=docker-images-${{ runner.os }}-${{ hashFiles('**/Dockerfile*', '**/package*.json', 'docker-compose*.yaml') }}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Clean up existing Docker containers
        run: docker compose down --volumes --remove-orphans

      - name: Build Docker images
        run: docker compose build --no-cache

      - name: Save Docker images to cache
        run: |
          mkdir -p /tmp/docker-images

          echo "=== Getting all images by name ==="
          IMAGES=$(docker images --format "{{.Repository}}:{{.Tag}}")
          echo "$IMAGES"

          if [ -n "$IMAGES" ]; then
            echo "Saving all images by name..."
            docker save $IMAGES -o /tmp/docker-images/images.tar
            echo "✅ All images saved successfully"
            ls -lh /tmp/docker-images/images.tar
          else
            echo "❌ No images found"
            tar -cf /tmp/docker-images/images.tar --files-from /dev/null
          fi
