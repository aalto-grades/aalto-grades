# SPDX-FileCopyrightText: 2023 The Ossi Developers
#
# SPDX-License-Identifier: MIT

# This is a Docker Compose configuration for deploying Ossi to a
# virtual machine from the main branch. Requires correct setup work to be done
# on the VM. Documentation for deployment is available in the aalto wiki.

---
services:
  reverse-proxy:
    image: nginx:1.27-alpine
    container_name: aalto-grades-reverse-proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - ${CERT_FILE}:/etc/ssl/certs/ossi.cs.aalto.fi.crt
      - ${CERT_KEY_FILE}:/etc/ssl/private/ossi.cs.aalto.fi.key
      # We use the /templates/ folder because we need to be able to use
      # ${SERVER_NAME} in the nginx.conf
      - ./reverse-proxy.conf:/etc/nginx/templates/nginx.conf.template
    environment:
      SERVER_NAME: "${SERVER_NAME}"
    # To automatically recreate proxy container in test server with watchtower
    depends_on:
      - frontend
      - backend

  frontend:
    image: ghcr.io/aalto-grades/aalto-grades-frontend:main
    container_name: aalto-grades-frontend
    restart: always
    tty: true

  backend:
    image: ghcr.io/aalto-grades/aalto-grades-backend:main
    container_name: aalto-grades-backend
    restart: always
    tty: true
    environment:
      AALTO_GRADES_BACKEND_PORT: "${AALTO_GRADES_BACKEND_PORT}"
      AALTO_GRADES_FRONTEND_CORS_ORIGIN: "${AALTO_GRADES_FRONTEND_CORS_ORIGIN}"
      AALTO_GRADES_JWT_SECRET: "${AALTO_GRADES_JWT_SECRET}"
      APLUS_API_URL: "${APLUS_API_URL}"
      POSTGRES_URL: database
      POSTGRES_USER: postgres
      POSTGRES_DATABASE: postgres
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      SAML_CALLBACK: "${SAML_CALLBACK}"
      SAML_ENTRYPOINT: "${SAML_ENTRYPOINT}"
      SAML_ISSUER: "${SAML_ISSUER}"
      SAML_METADATA_URL: "${SAML_METADATA_URL}"
      SISU_API_TOKEN: "${SISU_API_TOKEN}"
      SISU_API_URL: "${SISU_API_URL}"
      # OTEL settings
      OTEL_SERVICE_NAME: "ossi-backend"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-lgtm:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
      NODE_OPTIONS: >-
        --require @opentelemetry/auto-instrumentations-node/register
    volumes:
      - ${SAML_DECRYPTION_PVK_FILE}:/keys/saml-decryption-key.pem
      - ${SAML_PRIVATE_KEY_FILE}:/keys/saml-private-key.pem
      - ${SAML_SP_CERT_FILE}:/keys/saml-sp-cert.pem
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://localhost:601"
        tag: aalto-grades
    depends_on:
      - database

  database:
    image: postgres:16-alpine
    container_name: aalto-grades-database
    restart: always
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ${POSTGRES_MOUNTDIR}:/var/lib/postgresql/data

  # Running an internal grafana stack, currently not saving data permanently
  otel-lgtm:
    image: grafana/otel-lgtm:latest
    ports:
      - "127.0.0.1:3001:3000"
      # - "4317:4317" # OTLP gRPC
      # - "4318:4318" # OTLP HTTP
    # volumes:
    #   - "./grafana_volume/data:/data"
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.name=otel-lgtm
    restart: unless-stopped
